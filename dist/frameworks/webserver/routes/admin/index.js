"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const authServices_1 = require("../../../../app/service-interface/authServices");
const adminController_1 = __importDefault(require("../../../../adapters/adminController/adminController"));
const userDbInterfaces_1 = require("../../../../app/interfaces/userDbInterfaces");
const userRepostoryMongoDB_1 = require("../../../database/repositories/userRepostoryMongoDB");
const hotelDbInterface_1 = require("../../../../app/interfaces/hotelDbInterface");
const hotelRepositoryMongoDB_1 = require("../../../database/repositories/hotelRepositoryMongoDB");
const authservice_1 = require("../../../services/authservice");
const bookingDbInterface_1 = __importDefault(require("../../../../app/interfaces/bookingDbInterface"));
const bookingRepositoryMongoDB_1 = __importDefault(require("../../../database/repositories/bookingRepositoryMongoDB"));
const adminRouter = () => {
    const router = (0, express_1.Router)();
    const controller = (0, adminController_1.default)(authServices_1.authServiceInterface, authservice_1.authService, userDbInterfaces_1.userDbInterface, userRepostoryMongoDB_1.userDbRepository, hotelDbInterface_1.hotelDbInterface, hotelRepositoryMongoDB_1.hotelDbRepository, bookingDbInterface_1.default, bookingRepositoryMongoDB_1.default);
    router.post("/login", controller.adminLogin);
    router.get("/users", controller.getAllUser);
    router.get("/owners", controller.getAllOwners);
    router.get("/counts", controller.CardCount);
    router.get("/hotels", controller.getAllHotels);
    router.get("/bookings", controller.getBookings);
    router.patch("/block_user/:id", controller.userBlock);
    router.patch("/block_hotel/:id", controller.hotelBlock);
    router.patch("/verify_hotel/:id", controller.hotelVerify);
    router.patch("/reject_hotel/:id", controller.rejectHotel);
    router.post("/addStayType", controller.addCategory);
    router.get("/stayType/:id", controller.getCategoryById);
    router.get("/stayTypes", controller.getAllCategories);
    router.post("/updateStayType/:id", controller.updateCategoryName);
    router.post("/stayTypeListing/:id", controller.categoryListing);
    router.get("/reportings", controller.getReportings);
    router.get("/reporting/:id", controller.getReportingsByFilter);
    router.patch("/updateReporting/:id", controller.updateReportings);
    return router;
};
exports.default = adminRouter;
